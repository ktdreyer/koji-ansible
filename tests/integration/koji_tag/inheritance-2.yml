# Swap inheritance priorities for two parents.
---

- koji_tag:
    name: inheritance-2-parent-a
    state: present

- koji_tag:
    name: inheritance-2-parent-b
    state: present

- koji_tag:
    name: inheritance-2-child
    state: present
    inheritance:
    - parent: inheritance-2-parent-a
      priority: 0
    - parent: inheritance-2-parent-b
      priority: 10
  register: inheritance_2

- name: assert koji_tag create tag and inheritance result
  assert:
    that:
      - not inheritance_2.changed
      - inheritance_2.stdout_lines == []

- koji_tag:
    name: inheritance-2-child
    inheritance:
    - parent: inheritance-2-parent-a
      priority: 10
    - parent: inheritance-2-parent-b
      priority: 0
  register: inheritance_2

- name: assert updating inheritance result
  assert:
    that:
      - inheritance_2.changed
      - inheritance_2.stdout_lines == []
      - inheritance_2.diff.after.inheritance == ["   0   .... inheritance-2-parent-b", "  10   .... inheritance-2-parent-a"]
      - inheritance_2.diff.before.inheritance == ["   0   .... inheritance-2-parent-a", "  10   .... inheritance-2-parent-b"]

# Assert that we have the new parent.

- koji_call:
    name: getInheritanceData
    args: [inheritance-2-child]
  register: inheritance

- assert:
    that:
      - inheritance.data|length == 2
      # TODO: We probably cannot rely on the "0" vs "1" ordering here.
      # Probably need more Jinja tricks here to handle any order.
      # - inheritance.data[0].name == 'inheritance-2-parent-a'
      # - inheritance.data[0].priority == 10
      # - inheritance.data[1].name == 'inheritance-2-parent-b'
      # - inheritance.data[1].priority == 0
